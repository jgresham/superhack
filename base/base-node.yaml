
########## kubernets file for podman ###########
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-08-04T21:07:07Z"
  labels:
    app: base-node-pod
  name: base-node-pod
spec:
  ports:
  - name: "8543"
    nodePort: 30947
    port: 8543
    targetPort: 8543
  - name: "8544"
    nodePort: 31577
    port: 8544
    targetPort: 8544
  - name: "8553"
    nodePort: 31194
    port: 8553
    targetPort: 8553
  - name: "30302"
    nodePort: 31815
    port: 30302
    targetPort: 30302
  - name: "30302"
    nodePort: 30405
    port: 30302
    protocol: UDP
    targetPort: 30302
  - name: "9000"
    nodePort: 30922
    port: 9000
    targetPort: 9000
  - name: "9000"
    nodePort: 31409
    port: 9000
    protocol: UDP
    targetPort: 9000
  - name: "5052"
    nodePort: 32178
    port: 5052
    targetPort: 5052
  - name: "9545"
    nodePort: 30946
    port: 9545
    targetPort: 9545
  - name: "9003"
    nodePort: 30945
    port: 9003
    targetPort: 9003
  - name: "9003"
    nodePort: 30944
    port: 9003
    protocol: UDP
    targetPort: 9003
  - name: "9222"
    nodePort: 30000
    port: 9222
    targetPort: 9222
  - name: "9222"
    nodePort: 30001
    port: 9222
    protocol: UDP
    targetPort: 9222
  - name: "7300"
    nodePort: 30002
    port: 7300
    targetPort: 7300
  selector:
    app: base-node-pod
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2023-08-04T21:07:07Z"
  labels:
    app: base-node-pod
  name: base-node-pod
spec:
  containers:
  # todo, change to command: geth ...?
  # - args:
  #   - --http
  #   - --http.corsdomain="*"
  #   - --http.vhosts="*"
  #   - --http.addr
  #   - 0.0.0.0
  #   - --http.port
  #   - 8543
  #   - --authrpc.addr
  #   - 0.0.0.0
  #   - --authrpc.vhosts="*"
  #   - --authrpc.jwtsecret
  #   - /root/.ethereum/jwtsecret
  #   - --networkid=$CHAIN_ID
  #   - --rollup.sequencerhttp=$OP_GETH_SEQUENCER_HTTP
  #   - --ipcdisable
    # - --http
    # - --http.corsdomain
    # - http://localhost
    # - --http.vhosts
    # - localhost,host.containers.internal
    # - --authrpc.vhosts
    # - localhost,host.containers.internal
  - name: op-geth
    command: ['sh', '-c', 'cd /data && sh ./geth-entrypoint']
    # command: ['pwd'] # while we are just testing op-node, do nothing here
    envFrom: 
    - configMapRef:
        name: base-node-config

    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth:v1.101105.3
    ports:
    - containerPort: 8543
    - containerPort: 8544
    - containerPort: 8553
    # not needed, yet? p2p discovery
    - containerPort: 30302
    - containerPort: 30302
      protocol: UDP
    volumeMounts:
    - mountPath: /data
      name: op-geth-vol-1
  - name: op-node
    command: ['sh', '-c', 'cd /data && sh ./op-node-entrypoint']
  # - args:
  #   - --l1
  #   - https://eth-mainnet.g.alchemy.com/v2/hlnAhv-Jx2mCmUuusgTvsrdOelOSRbl9
  #   - --l2
  #   - http://op-geth:8553
  #   - --rpc.addr
  #   - 0.0.0.0
  #   - --rpc.port
  #   - 9545
  #   - --l1.trustrpc
  #   - --l2.jwt-secret
  #   - /root/.ethereum/jwtsecret
    # - --authrpc.addr
    # - 0.0.0.0
    # - --ipcdisable
    # - --p2p.disable
    # - --http
    # - --http.corsdomain
    # - http://localhost
    # - --http.vhosts
    # - localhost,host.containers.internal
    # - --authrpc.vhosts
    # - localhost,host.containers.internal
    envFrom:
    - configMapRef:
        name: base-node-config
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.1.0
    ports:
    - containerPort: 9545
    - containerPort: 9222
    - containerPort: 9222
      protocol: UDP
    - containerPort: 7300 # metrics  
    volumeMounts:
    - mountPath: /data
      name: op-node-vol-1
  restartPolicy: OnFailure
  volumes:
  - hostPath:
      path: /home/johns/dev/superhack/base/workdir/op-geth
      type: Directory
    name: op-geth-vol-1
  - hostPath:
      path: /home/johns/dev/superhack/base/workdir/op-node
      type: Directory
    name: op-node-vol-1
